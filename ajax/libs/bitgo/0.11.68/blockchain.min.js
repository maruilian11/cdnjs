var request=require("superagent"),common=require("./common"),Blockchain=function(t){this.bitgo=t};Blockchain.prototype.getAddress=function(t,e){return t=t||{},common.validateParams(t,["address"],[],e),this.bitgo.get(this.bitgo.url("/address/"+t.address)).result().nodeify(e)},Blockchain.prototype.getAddressTransactions=function(t,e){return t=t||{},common.validateParams(t,["address"],[],e),this.bitgo.get(this.bitgo.url("/address/"+t.address+"/tx")).result().nodeify(e)},Blockchain.prototype.getAddressUnspents=function(t,e){t=t||{},common.validateParams(t,["address"],[],e);var i=this.bitgo.url("/address/"+t.address+"/unspents");if(t.limit){if("number"!=typeof t.limit)throw new Error("invalid limit - number expected");i+="?limit="+1e8*t.limit}return this.bitgo.get(i).result().then(function(t){return t.unspents}).nodeify(e)},Blockchain.prototype.getTransaction=function(t,e){return t=t||{},common.validateParams(t,["id"],[],e),this.bitgo.get(this.bitgo.url("/tx/"+t.id)).result().nodeify(e)},Blockchain.prototype.getBlock=function(t,e){return t=t||{},common.validateParams(t,["id"],[],e),this.bitgo.get(this.bitgo.url("/block/"+t.id)).result().nodeify(e)},module.exports=Blockchain;