var common=require("./common"),Util=require("./util"),assert=require("assert"),Address=require("bitcoinjs-lib/src/address"),Transaction=require("bitcoinjs-lib/src/transaction"),networks=require("bitcoinjs-lib/src/networks"),Q=require("q"),_=require("lodash"),PendingApproval=function(e,t,r){this.bitgo=e,this.pendingApproval=t,this.wallet=r};PendingApproval.prototype.id=function(){return this.pendingApproval.id},PendingApproval.prototype.ownerType=function(e,t){if(e=e||{},common.validateParams(e,[],[],t),this.pendingApproval.walletId)return"wallet";if(this.pendingApproval.enterprise)return"enterprise";throw new Error("unexpected pending approval owner: neither walletId nor enterprise was present")},PendingApproval.prototype.walletId=function(){return this.pendingApproval.walletId},PendingApproval.prototype.enterpriseId=function(){return this.pendingApproval.enterprise},PendingApproval.prototype.state=function(){return this.pendingApproval.state},PendingApproval.prototype.creator=function(){return this.pendingApproval.creator},PendingApproval.prototype.type=function(){return assert(this.pendingApproval.info),this.pendingApproval.info.type},PendingApproval.prototype.info=function(){return this.pendingApproval.info},PendingApproval.prototype.url=function(e){return e=e||"",this.bitgo.url("/pendingapprovals/"+this.id()+e)},PendingApproval.prototype.get=function(e,t){e=e||{},common.validateParams(e,[],[],t);var r=this;return this.bitgo.get(this.url()).result().then(function(e){return r.pendingApproval=e,r}).nodeify(t)},PendingApproval.prototype.populateWallet=function(){var e=this;if(!e.wallet)return e.bitgo.wallets().get({id:e.info().transactionRequest.sourceWallet}).then(function(t){if(!t)throw new Error("unexpected - unable to get wallet using sourcewallet");e.wallet=t});if(e.wallet.id()!=e.info().transactionRequest.sourceWallet)throw new Error("unexpected source wallet for pending approval")},PendingApproval.prototype.recreateAndSignTransaction=function(e,t){e=_.extend({},e),common.validateParams(e,["txHex"],[],t);var r=Transaction.fromHex(e.txHex);if(!r.outs)throw new Error("transaction had no outputs or failed to parse successfully");var n=networks[common.getNetwork()];e.recipients={};var o=this;return Q().then(function(){return o.info().transactionRequest.recipients?void(e.recipients=o.info().transactionRequest.recipients):r.outs.length<=2?void r.outs.forEach(function(t){var r=Address.fromOutputScript(t.script,n).toBase58Check();o.info().transactionRequest.destinationAddress==r&&(e.recipients[r]=t.value)}):o.wallet.addresses({chain:1,sort:-1,limit:500}).then(function(t){var o=_.indexBy(t.addresses,"address");r.outs.forEach(function(t){var r=Address.fromOutputScript(t.script,n).toBase58Check();o[r]||(e.recipients[r]=t.value)})})}).then(function(){return o.wallet.createAndSignTransaction(e)})},PendingApproval.prototype.constructApprovalTx=function(e,t){if(e=e||{},common.validateParams(e,[],["walletPassphrase"],t),"transactionRequest"===this.type()&&!e.walletPassphrase)throw new Error("wallet passphrase or xprv required to approve a transactionRequest");if(e.useOriginalFee){if("boolean"!=typeof e.useOriginalFee)throw new Error("invalid type for useOriginalFeeRate");if(e.fee||e.feeRate||e.feeTxConfirmTarget)throw new Error("cannot specify a fee/feerate/feeTxConfirmTarget as well as useSameFeeRate")}var r=this;return Q().then(function(){if("transactionRequest"===r.type()){var t={txHex:r.info().transactionRequest.transaction};return e.useOriginalFee&&(t.fee=r.info().transactionRequest.fee),r.populateWallet().then(function(){return r.recreateAndSignTransaction(_.extend(e,t))})}})},PendingApproval.prototype.approve=function(e,t){if(e=e||{},common.validateParams(e,[],["walletPassphrase"],t),"transactionRequest"===this.type()&&!e.walletPassphrase)throw new Error("wallet passphrase or xprv required to approve a transactionRequest");var r=this;return Q().then(function(){return"transactionRequest"===r.type()?r.populateWallet().then(function(){return r.recreateAndSignTransaction(_.extend(e,{txHex:r.info().transactionRequest.transaction}))}):void 0}).then(function(e){var n={state:"approved"};return e&&(n.tx=e.tx),r.bitgo.put(r.url()).send(n).result().nodeify(t)})},PendingApproval.prototype.reject=function(e,t){e=e||{},common.validateParams(e,[],[],t);return this.bitgo.put(this.url()).send({state:"rejected"}).result().nodeify(t)},PendingApproval.prototype.cancel=function(e,t){return this.reject(e,t)},module.exports=PendingApproval;