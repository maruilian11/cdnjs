var bodyParser=require("body-parser"),BitGoJS=require("./index"),common=require("./common"),Q=require("q"),url=require("url"),_=require("lodash"),pjson=require("../package.json"),BITGOEXPRESS_USER_AGENT="BitGoExpress/"+pjson.version,handleDecrypt=function(e){return{decrypted:e.bitgo.decrypt(e.body)}},handleEncrypt=function(e){return{encrypted:e.bitgo.encrypt(e.body)}},handleVerifyAddress=function(e){return{verified:e.bitgo.verifyAddress(e.body)}},handleCreateLocalKeyChain=function(e){return e.bitgo.keychains().create(e.body)},handleCreateWalletWithKeychains=function(e){return e.bitgo.wallets().createWalletWithKeychains(e.body)},handleSendCoins=function(e){return e.bitgo.wallets().get({id:e.params.id}).then(function(r){return r.sendCoins(e.body)}).then(function(e){if("pendingApproval"===e.status)throw apiResponse(202,e);return e})},handleSendMany=function(e){return e.bitgo.wallets().get({id:e.params.id}).then(function(r){return r.sendMany(e.body)}).then(function(e){if("pendingApproval"===e.status)throw apiResponse(202,e);return e})},handleCreateTransaction=function(e){return e.bitgo.wallets().get({id:e.params.id}).then(function(r){return r.createTransaction(e.body)})["catch"](function(e){if("Insufficient funds"===e.message)throw apiResponse(400,e,"Insufficient funds");throw e})},handleSignTransaction=function(e){return e.bitgo.wallets().get({id:e.params.id}).then(function(r){return r.signTransaction(e.body)})},handleShareWallet=function(e){return e.bitgo.wallets().get({id:e.params.id}).then(function(r){return r.shareWallet(e.body)})},handleAcceptShare=function(e){var r=e.body||{};return r.walletShareId=e.params.shareId,e.bitgo.wallets().acceptShare(r)},handleApproveTransaction=function(e){var r=e.body||{};return e.bitgo.pendingApprovals().get({id:e.params.id}).then(function(e){return"approved"===r.state?e.approve(r):e.reject(r)})},handleConstructApprovalTx=function(e){var r=e.body||{};return e.bitgo.pendingApprovals().get({id:e.params.id}).then(function(e){return e.constructApprovalTx(r)})},apiResponse=function(e,r,t){var a=new Error(t);return a.status=e,a.result=r,a},parseBody=bodyParser.json(),prepareBitGo=function(e){return function(r,t,a){var n;if(r.headers.authorization){var o=r.headers.authorization.split(" ");2===o.length&&"bearer"===o[0].toLowerCase()&&(n=o[1])}var i=r.headers["user-agent"]?BITGOEXPRESS_USER_AGENT+" "+r.headers["user-agent"]:BITGOEXPRESS_USER_AGENT,p={accessToken:n,userAgent:i,env:e.env};e.customrooturi&&(p.customRootURI=e.customrooturi),e.custombitcoinnetwork&&(p.customBitcoinNetwork=e.custombitcoinnetwork),r.bitgo=new BitGoJS.BitGo(p),a()}},promiseWrapper=function(e,r){return function(t,a,n){r.debug&&console.log("handle: "+url.parse(t.url).pathname),Q.fcall(e,t,a,n).then(function(e){var r=200;e.__redirect?(a.redirect(e.url),r=302):e.__render?a.render(e.template,e.params):a.status(r).send(e)})["catch"](function(e){var r;r=e instanceof Error?e:"string"==typeof e?new Error("(string_error) "+e):new Error("(object_error) "+JSON.stringify(e));var t=r.message||"local error",n=r.result||{error:t};n=_.extend({},n),n.message=r.message;var o=r.status||500;o>=200&&300>o||console.log("error %s: %s",o,r.message),500==o&&console.log(r.stack),a.status(o).send(n)}).done()}};exports=module.exports=function(e,r){e.post("/api/v1/decrypt",parseBody,prepareBitGo(r),promiseWrapper(handleDecrypt,r)),e.post("/api/v1/encrypt",parseBody,prepareBitGo(r),promiseWrapper(handleEncrypt,r)),e.post("/api/v1/verifyaddress",parseBody,prepareBitGo(r),promiseWrapper(handleVerifyAddress,r)),e.post("/api/v1/keychain/local",parseBody,prepareBitGo(r),promiseWrapper(handleCreateLocalKeyChain,r)),e.post("/api/v1/wallets/simplecreate",parseBody,prepareBitGo(r),promiseWrapper(handleCreateWalletWithKeychains,r)),e.post("/api/v1/wallet/:id/sendcoins",parseBody,prepareBitGo(r),promiseWrapper(handleSendCoins,r)),e.post("/api/v1/wallet/:id/sendmany",parseBody,prepareBitGo(r),promiseWrapper(handleSendMany,r)),e.post("/api/v1/wallet/:id/createtransaction",parseBody,prepareBitGo(r),promiseWrapper(handleCreateTransaction,r)),e.post("/api/v1/wallet/:id/signtransaction",parseBody,prepareBitGo(r),promiseWrapper(handleSignTransaction,r)),e.post("/api/v1/wallet/:id/simpleshare",parseBody,prepareBitGo(r),promiseWrapper(handleShareWallet,r)),e.post("/api/v1/walletshare/:shareId/acceptShare",parseBody,prepareBitGo(r),promiseWrapper(handleAcceptShare,r)),e.put("/api/v1/pendingapprovals/:id/express",parseBody,prepareBitGo(r),promiseWrapper(handleApproveTransaction,r)),e.put("/api/v1/pendingapprovals/:id/constructTx",parseBody,prepareBitGo(r),promiseWrapper(handleConstructApprovalTx,r))};